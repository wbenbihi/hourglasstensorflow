version: '3'

dotenv: ['.env']

tasks:
  init:
    cmds:
      - poetry install
      - pre-commit install --allow-missing-config
  lock:
    cmds:
      - poetry export --without-hashes -f requirements.txt --output requirements.dev.txt --dev
      - poetry export --without-hashes -f requirements.txt --output requirements.txt --dev
  isort:
    cmds:
      - pre-commit run isort --all-files
  cli:
    cmds:
      - poetry run python cli/__init__.py {{.CLI_ARGS}}
  env:
    cmds:
      - cat .env.{{.CLI_ARGS}} > .env && echo "Activate <{{.CLI_ARGS}}> environment variables"
  changelog:
    cmds:
      - poetry run python versioning/changelog.py
  notebook:
    cmds:
      - poetry run jupyter notebook
  run:
    cmds:
      - poetry run ipython
  test:
    cmds:
      - poetry run pytest tests/
  reports:
    cmds:
      - task: test
      - poetry run flake8 hourglass_tensorflow --statistics --tee --output-file ./reports/flake8stats.txt
  badges:
    cmds:
      - poetry run genbadge tests -i reports/junit.xml -o - > reports/tests-badge.svg
      - poetry run genbadge coverage -i reports/coverage.xml -o - > reports/coverage-badge.svg
      - poetry run genbadge flake8 -i reports/flake8stats.txt -o - > reports/flake8-badge.svg
  sphinx:
    cmds:
      - sphinx-autobuild docs/source docs/build/html
  cov:doc:
    cmds:
      - docstr-coverage hourglass_tensorflow/ --badge=reports/docstr-badge.svg --fail-under 90.0 --accept-empty

